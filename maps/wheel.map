-- A ferris wheel

info = {
  RADIUS   = 20,
  HEIGHT   = 26,
  WIDTH    =  8,
  DEPTH    =  3,
  AMOUNT   = 15,
  VELOCITY =  0.01,
  CARRIAGE_SIZE = 3,
};

-- base
function feriswheel_base(info)
  place_block({pos={0,0.2,0}, size={info.WIDTH,0.2,info.DEPTH}, color=0x909090});
  place_block({pos={0,0.25,-info.DEPTH-0.1}, size={info.DEPTH-0.5,0.05,0.1}, color=0x60ffff});
  place_block({pos={0,0.15,-info.DEPTH-0.2}, size={info.DEPTH-0.3,0.05,0.2}, color=0x90ffff});
  place_block({pos={0,0.05,-info.DEPTH-0.3}, size={info.DEPTH-0.1,0.05,0.3}, color=0x60ffff});
  
  side_width = info.WIDTH - 0.5;
  side_length = math.hypot(info.HEIGHT-0.1, side_width)/2
  offset = info.DEPTH-0.12;
  block1 = place_block({pos={ side_width/2,info.HEIGHT/2+0.2,offset}, size={0.2,side_length,0.1}, color=0x606060});
  block2 = place_block({pos={-side_width/2,info.HEIGHT/2+0.2,offset}, size={0.2,side_length,0.1}, color=0x606060});
  side_angle = math.atan2(side_width, info.HEIGHT-0.1);
  rotate_block(block1, {angle=side_angle, axis={0,0,1}});
  rotate_block(block2, {angle=-side_angle, axis={0,0,1}});
  place_block({pos={0,info.HEIGHT/2+0.2,offset}, size={side_width/2,0.2,0.08}, color=0x606060});
  place_block({pos={0,info.HEIGHT,offset}, size={1,1,0.12}, color=0x9090ff});

  block1 = place_block({pos={ side_width/2,info.HEIGHT/2+0.2,-offset}, size={0.2,side_length,0.1}, color=0x606060});
  block2 = place_block({pos={-side_width/2,info.HEIGHT/2+0.2,-offset}, size={0.2,side_length,0.1}, color=0x606060});
  side_angle = math.atan2(side_width, info.HEIGHT-0.1);
  rotate_block(block1, {angle=side_angle, axis={0,0,1}});
  rotate_block(block2, {angle=-side_angle, axis={0,0,1}});
  place_block({pos={0,info.HEIGHT/2+0.2,-offset}, size={side_width/2,0.2,0.08}, color=0x606060});
  place_block({pos={0,info.HEIGHT,-offset}, size={1,1,0.12}, color=0x9090ff});
  
  motor = place_block({pos={0,info.HEIGHT,0}, size={0.2,0.2,info.DEPTH-0.24}, color=0x606060});
  rotate_block(motor, {angle=math.pi/4, axis={0,0,1}});
end

-- wheel
function feriswheel_wheel(info)
  radius = info.RADIUS/2;
  offset = info.DEPTH-0.5;
  hang = math.pi/info.AMOUNT;
  side_length = radius*math.sin(hang);
  side_radius = radius*math.cos(hang);
  block_list={};
  qpi = math.pi/4;
  for i = 0,info.AMOUNT-1 do
    ang = -math.pi/2+math.pi*2*i/info.AMOUNT;
    x = math.cos(ang) * radius;
    y = math.sin(ang) * radius + info.HEIGHT;
    ex = math.cos(ang) * info.RADIUS;
    ey = math.sin(ang) * info.RADIUS + info.HEIGHT;
    sx = math.cos(ang+hang) * side_radius;
    sy = math.sin(ang+hang) * side_radius + info.HEIGHT;
    block = place_block({pos={x,y,offset}, size={radius,0.1,0.1}, color=0xffffff});
    rotate_block(block, {angle=qpi, axis={1,0,0}});
    rotate_block(block, {angle=ang, axis={0,0,1}});
    block_list[#block_list+1] = block;
    block = place_block({pos={x,y,-offset}, size={radius,0.1,0.1}, color=0xffffff});
    rotate_block(block, {angle=qpi, axis={1,0,0}});
    rotate_block(block, {angle=ang, axis={0,0,1}});
    block_list[#block_list+1] = block;
    block = place_block({pos={x,y,0}, size={0.1,0.1,offset}, color=0xffffff});
    rotate_block(block, {angle=ang+qpi, axis={0,0,1}});
    block_list[#block_list+1] = block;
    block = place_block({pos={ex,ey,0}, size={0.1,0.1,offset}, color=0xffffff});
    rotate_block(block, {angle=ang+qpi, axis={0,0,1}});
    block_list[#block_list+1] = block;
    block = place_block({pos={sx,sy,offset}, size={0.1,side_length,0.1}, color=0xffffff});
    rotate_block(block, {angle=qpi, axis={0,1,0}});
    rotate_block(block, {angle=ang+hang, axis={0,0,1}});
    block_list[#block_list+1] = block;
    block = place_block({pos={sx,sy,-offset}, size={0.1,side_length,0.1}, color=0xffffff});
    rotate_block(block, {angle=qpi, axis={0,1,0}});
    rotate_block(block, {angle=ang+hang, axis={0,0,1}});
    block_list[#block_list+1] = block;
  end
  obj = create_object(block_list, {0,info.HEIGHT,0});
  rotate_object(obj, {angle_vel=info.VELOCITY, axis={0,0,1}, reset=1});
  return obj;
end

-- cariage
function feriswheel_cariages(info)
  top = info.HEIGHT - info.RADIUS;
  hinge = info.CARRIAGE_SIZE/16;
  height = (top - hinge*12 - 0.7)/2;
  offset = info.DEPTH-0.8;
  obj_list={};
  tpi = math.pi * 2 / 3;
  for i = 0,info.AMOUNT-1 do
    cr = math.random() * math.pi * 2;
    col = math.rgb(0.7 + 0.3*math.cos(cr), 0.7 + 0.3*math.cos(cr+tpi), 0.7 + 0.3*math.cos(cr-tpi));
    block_list={};
    block = place_block({pos={0,0.6,0}, size={info.CARRIAGE_SIZE+0.1, 0.2, offset+0.1}, color=col});
    block_list[#block_list+1] = block;
    block = place_block({pos={ info.CARRIAGE_SIZE,0.8+height, offset}, size={0.1, height, 0.1}, color=col});
    block_list[#block_list+1] = block;
    block = place_block({pos={ info.CARRIAGE_SIZE,0.8+height,-offset}, size={0.1, height, 0.1}, color=col});
    block_list[#block_list+1] = block;
    block = place_block({pos={-info.CARRIAGE_SIZE,0.8+height, offset}, size={0.1, height, 0.1}, color=col});
    block_list[#block_list+1] = block;
    block = place_block({pos={-info.CARRIAGE_SIZE,0.8+height,-offset}, size={0.1, height, 0.1}, color=col});
    block_list[#block_list+1] = block;
    
    block = place_block({pos={ info.CARRIAGE_SIZE,0.6+height*2,0}, size={0.1, 0.15, offset-0.1}, color=col});
    block_list[#block_list+1] = block;
    block = place_block({pos={-info.CARRIAGE_SIZE,0.6+height*2,0}, size={0.1, 0.15, offset-0.1}, color=col});
    block_list[#block_list+1] = block;
    
    hinge_ang = math.atan2(3,4);
    block = place_block({pos={-hinge*8,top-hinge*6, offset}, size={hinge*10, 0.11, 0.11}, color=col});
    rotate_block(block, {angle=hinge_ang, axis={0,0,1}, reset=1});
    block_list[#block_list+1] = block;
    block = place_block({pos={-hinge*8,top-hinge*6,-offset}, size={hinge*10, 0.11, 0.11}, color=col});
    rotate_block(block, {angle=hinge_ang, axis={0,0,1}, reset=1});
    block_list[#block_list+1] = block;
    block = place_block({pos={ hinge*8,top-hinge*6, offset}, size={hinge*10, 0.11, 0.11}, color=col});
    rotate_block(block, {angle=-hinge_ang, axis={0,0,1}, reset=1});
    block_list[#block_list+1] = block;
    block = place_block({pos={ hinge*8,top-hinge*6,-offset}, size={hinge*10, 0.11, 0.11}, color=col});
    rotate_block(block, {angle=-hinge_ang, axis={0,0,1}, reset=1});
    block_list[#block_list+1] = block;
    
    obj = create_object(block_list, {0,info.HEIGHT - info.RADIUS,0});
    obj_list[#obj_list+1] = obj;
  end
  return obj_list;
end

feriswheel_base(info);
wheel = feriswheel_wheel(info);
carriages = feriswheel_cariages(info);

function tick(n)
  rotate_object(wheel, {angle=n*info.VELOCITY, axis={0,0,1}, reset=1});
  update_object(wheel);
  for i = 0,info.AMOUNT-1 do
    ang = -math.pi/2+math.pi*2*i/info.AMOUNT + n*info.VELOCITY;
    ex = math.cos(ang) * info.RADIUS;
    ey = math.sin(ang) * info.RADIUS + info.RADIUS;
    fx = math.cos(ang + info.VELOCITY) * info.RADIUS;
    fy = math.sin(ang + info.VELOCITY) * info.RADIUS + info.RADIUS;
    carriage = carriages[i+1];
    move_object(carriage, {offset={ex,ey,0}, acceleration={fx-ex,fy-ey,0}, reset=1});
    update_object(carriage);
  end
end

set_start({0,0.8,0});
